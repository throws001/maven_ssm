<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
    <!--           1.讲ybatis 整合进来需要做什么
                    1.1整合第三方数据库
                    1.2 将sqlsession工厂交给spring管理
                    1.3 读取配置映射文件
                    1.4 创建事务管理类 DataSourcetransactionManager
                    -->
        <context:property-placeholder location="classpath:db.properties" />
        <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
            <property name="driverClass" value="${driverClass}" />
            <property name="jdbcUrl" value="${jdbcUrl}" />
            <property name="user" value="${user}" />
            <property name="password" value="${password}" />
        </bean>

    <!--   配置sqlsessionfatory工厂对象  做了什么？   把工厂类对象交给了spring管理
                   需要一个连接池-->
        <bean id="factory" class="org.mybatis.spring.SqlSessionFactoryBean">
            <property name="dataSource" ref="dataSource" />
    <!--        起别名 扫包后 把里面的poji对象全部可以取别名  默认是首字母小写名字-->
            <property name="typeAliasesPackage" value="com.itheima.poji"/>

        </bean>
    <!--   还要扫描dao的映射文件，这个工作，也可以在这里配置，交给spring管理-->
        <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
            <property name="basePackage" value="com.itheima.dao" />

         </bean>
    <!--  事务管理类 -->
        <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
            <property name="dataSource" ref="dataSource" />
        </bean>

    <!--    配置事务注解   tx -->
        <tx:annotation-driven />


</beans>